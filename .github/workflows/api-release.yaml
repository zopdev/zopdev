name: Publish api image

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  test-and-code-quality:
    name: 🧪 Test and Linters
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Get dependencies
        run: |
          cd api
          go mod download

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.59.1
          args: --timeout 8m
          skip-pkg-cache: true
          skip-build-cache: true
          working-directory: api

      - name: Test
        run: |
          cd api
          export APP_ENV=test
          go test ./... -v -short -coverprofile packageWithpbgo.cov -coverpkg=./...
          grep -vE '^gofr\.dev\/.*\.pb\.go' packageWithpbgo.cov > profile.cov
          go tool cover -func profile.cov

  publich-image:
    if: ${{ startsWith(github.ref, 'refs/tags/v')}}
    name: 🔨 Build and 🐳 Dockerize
    needs: test-and-code-quality
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract Release Tag
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: "v4vikash"
          password: ${{ secrets.DOCKER_HUB_PAT }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          push: true
          context: ./api
          file: ./api/Dockerfile
          tags: zopdev/api:${{ env.RELEASE_VERSION }}